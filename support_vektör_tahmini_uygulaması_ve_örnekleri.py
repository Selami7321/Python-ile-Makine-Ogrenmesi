# -*- coding: utf-8 -*-
"""Support Vektör Tahmini Uygulaması ve Örnekleri.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1435xn9DZjmxaEbL7P7riyntili7FA6uE

HAZIRLAYAN :  SELAMİ ÇETİN
"""

#1 Kütüphaneler
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#2 Veri Önişleme
#2.1 Veri Yükleme
veriler = pd.read_csv("maaslar.csv")

# Eğitim seviyesini yazdıralım
x= veriler.iloc[ : ,1:2]
print(x)
#Maaş bilgilerini yazdıralım
y= veriler.iloc[ : , 2:]
print(y)

X=x.values
Y=y.values
from sklearn.linear_model import LinearRegression
lin_reg=LinearRegression()
lin_reg.fit(X,Y)

#Linear Regresyonu Görselleştirelim
plt.scatter(X,Y, color="red")
plt.plot(X,lin_reg.predict(X), color="blue")
plt.show()

#poliynom Regression degree 2
from sklearn.preprocessing import PolynomialFeatures
poly_reg=PolynomialFeatures(degree=2)
x_poly=poly_reg.fit_transform(X)
lin_reg2=LinearRegression()
lin_reg2.fit(x_poly,y)
plt.scatter(X,Y,color="red")
plt.plot(X,lin_reg2.predict(poly_reg.fit_transform(X)),color="blue")
plt.show()

#poliynom Regression degree 4
from sklearn.preprocessing import PolynomialFeatures
poly_reg=PolynomialFeatures(degree=4)
x_poly=poly_reg.fit_transform(X)
lin_reg2=LinearRegression()
lin_reg2.fit(x_poly,y)
#Görselleştirme
plt.scatter(X,Y,color="red")
plt.plot(X,lin_reg2.predict(poly_reg.fit_transform(X)),color="green")
plt.show()

#poliynom Regression degree 6
from sklearn.preprocessing import PolynomialFeatures
poly_reg=PolynomialFeatures(degree=6)
x_poly=poly_reg.fit_transform(X)
lin_reg2=LinearRegression()
lin_reg2.fit(x_poly,y)
#Görselleştirme
plt.scatter(X,Y,color="red")
plt.plot(X,lin_reg2.predict(poly_reg.fit_transform(X)),color="yellow")
plt.show()


#1 .Model Doğrusal Regressyon Tahminleri
print(lin_reg.predict([[6.6]])) # 6-7 .kişiye vereceği maaş
print(lin_reg.predict([[5.5]])) # 5-6 . kişiye vereceği maaş

# 2.Modelin Polinomsal Regressyon ile tahmini
print(lin_reg2.predict(poly_reg.fit_transform([[6.6]]))) #Polinomsal Regressyonun 6- 7. kişi için vereceği maaş


#Verilerin Ölçeklenmesi
from sklearn.preprocessing import StandardScaler
simplec=StandardScaler()
x_olcekli=simplec.fit_transform(X)
simplec2=StandardScaler()
y_olcekli=simplec2.fit_transform(Y)

from sklearn.svm import SVR
svr_reg=SVR(kernel="rbf")
svr_reg.fit(x_olcekli,y_olcekli)
plt.scatter(x_olcekli,y_olcekli , color="red")
plt.plot(x_olcekli,svr_reg.predict(x_olcekli) , color="blue")
plt.title("SVR İLE Regressyon")
plt.show()

print(svr_reg.predict([[11]]))
print(svr_reg.predict([[6.6]]))



#--------------------------------------------
simpled=StandardScaler()
x_olcekli=simpled.fit_transform(X)
simpled2=StandardScaler()
y_olcekli= simpled2.fit_transform(Y)

svr_reg2=SVR(kernel="linear")
svr_reg2.fit(x_olcekli,y_olcekli)
plt.scatter(x_olcekli,y_olcekli , color="purple")
plt.plot(x_olcekli,svr_reg2.predict(x_olcekli) ,color="gray")
plt.title("Linear Regressyon")
plt.show()

#------------------------------------------
simplef=StandardScaler()
x_olcekli=simplef.fit_transform(X)
simplef2=StandardScaler()
y_olcekli=simplef2.fit_transform(Y)

svr_reg3=SVR(kernel="poly")
svr_reg3.fit(x_olcekli,y_olcekli)
plt.scatter(x_olcekli,y_olcekli , color="orange")
plt.plot(x_olcekli,svr_reg3.predict(x_olcekli) , color="green")
plt.title("Polinominal Regressyon")
plt.show()

#----------------------------------------

simpleg=StandardScaler()
x_olcekli=simpleg.fit_transform(X)
simpleg2=StandardScaler()
y_olcekli=simpleg2.fit_transform(Y)

svr_reg4= SVR(kernel="sigmoid")
svr_reg4.fit(x_olcekli,y_olcekli)
plt.scatter(x_olcekli,y_olcekli , color="red")
plt.plot(x_olcekli,svr_reg4.predict(x_olcekli) ,color="darkblue")
plt.title("Sigmoid Regressyon")
plt.show()